#ifndef ADS1115_H
#define ADS1115_H

#include <math.h>
#include <inttypes.h>

enum PGA_ADS1115
{
	E_REG_ADS1115_CONFIG_PGA_FSR__6_144V = 6144,
	E_REG_ADS1115_CONFIG_PGA_FSR__4_096V = 4096,
	E_REG_ADS1115_CONFIG_PGA_FSR__2_048V = 2048,
	E_REG_ADS1115_CONFIG_PGA_FSR__1_024V = 1024,
	E_REG_ADS1115_CONFIG_PGA_FSR__0_512V = 512,
	E_REG_ADS1115_CONFIG_PGA_FSR__0_256V = 256
};

enum SPS_ADS1115
{
	E_REG_ADS1115_CONFIG_DR_8_SPS = 8,
	E_REG_ADS1115_CONFIG_DR_16_SPS = 16,
	E_REG_ADS1115_CONFIG_DR_32_SPS = 32,
	E_REG_ADS1115_CONFIG_DR_64_SPS = 64,
	E_REG_ADS1115_CONFIG_DR_128_SPS = 128,
	E_REG_ADS1115_CONFIG_DR_250_SPS = 250,
	E_REG_ADS1115_CONFIG_DR_475_SPS = 475,
	E_REG_ADS1115_CONFIG_DR_860_SPS = 860
};

enum CHANNEL_ADC_ADS1115
{
	E_REG_ADS1115_CONFIG_MUX_AINP_AIN0_and_AINN_GND = 0,
	E_REG_ADS1115_CONFIG_MUX_AINP_AIN1_and_AINN_GND = 1,
	E_REG_ADS1115_CONFIG_MUX_AINP_AIN2_and_AINN_GND = 2,
	E_REG_ADS1115_CONFIG_MUX_AINP_AIN3_and_AINN_GND = 3
};

float get_read_adc(uint8_t channel_adc, uint16_t pga_adc, uint8_t sps_adc);

#endif
